
https://css-tricks.com/snippets/css/a-guide-to-flexbox/
Used when you want to line things up in one direction
Will automatically try to fill an entire row width
    If you start setting widths on flexbox, you should switch to grid

/* CSS Flexbox Cheatsheet */
    // Efficient way to lay out, align and distribute space among items in a container, even when there size is unknown and/or dynamic.
        // Gives the containter the ability to alter its items' width and height (and order) to best fill the available space (adaptive to all kinds of display devices and screen sizes).
        // Flexbox is direction-agnostic as opposed to the regular layouts - block which is vertically-based and inline which is horizontally-based.
    // Flexbox layout is most appropriate to the components of an application, and small-scale layouts. 
    // The grid layout is intended for larger scale layouts.



/* Basics and Terminology */
    // main axis - the primary axis along which flex items are laid out. Not necessarily horizontal; depends on the `flex-direction` property.
    //main-start | main-end - flex items are placed within the container startying from main-start and going to main-end.
    // main size - an item's `width` or `height`, whichever is in the main dimension. 
    // cross axis - the axis perpendicular to the main axis. It's direction depends on the main axis direction.
    // cross-start | cross-end - flex lines are filled with items and placed into the container starting on the cross-start side and going towards the cross-end side. 
    // cross-size - the width or height of an item, whichever is in the cross dimension.



/* Properties for the parent (flex container) */
    display: flex | inline-flex ;
    
    - flex-direction: row | row-reverse | column | column-reverse ; 
    - flex-wrap: nowrap | wrap | wrap-reverse ;
    - flex-flow: flex-direction | flex-wrap ;
    
    - justify-content: flex-start | flex-end | center | space-between | space-around | space-evenly ;
    - align-items: flex-start | flex-end | center | stretch | baseline ;
    - align-content: flex-start | flex-end | center| stretch | space-between | space-around ; 



/* Properties for the child (flex item) */
    order: <number> ; 
    flex-grow: <number> ;
    flex-shrink: <number> ; 
    flex-basis:  | auto ;
    flex: none | [<flex-grow> <flex-shrink>? || <flex-basis>] ;
    align-self: auto | flex-start | flex-end | center | baseline | stretch ; 



/* Property Descriptions for the parent (flex container) */
    display: flex | inline-flex ;
        /* 
        Defines the flex container: `inline` or `block`, respectively. Note: CSS columns have no effect on a flex container 
        */

    flex-direction: row | row-reverse | column | column-reverse ; 
        /* 
        Establishes the main-axis and defines the flow direction. 
            row: (default) left to right
            row-reverse: right to left
            column: top to bottom
            column-reverse: bottom to top
        */
    
    flex-wrap: nowrap | wrap | wrap-reverse ;
        /* 
        Specifices the wrap properties for the flex container.
            nowrap: (default) items will be on one lines
            wrap: items wrap onto multiple lines, from top to bottom
            wrap-reverse: items wrap onto multiple lines from bottom to top. 
        */

    flex-flow: <flex-direction> | <flex-wrap> ;
        /* 
        Shorthand for <flex-direction> and <flex-wrap>, which together define the flex container's main and cross axes. 
        */
    
    justify-content: flex-start | flex-end | center | space-between | space-around | space-evenly ;
        /*
        Defines alignment along the main axis. Helps distribute space leftover from the flex. Some control over alignment when items overflow the line.
            - flex-start: (default) items are packed toward the start
            - flex-end: items are packed toward the end
            - start: items are packed toward start of the writing mode direction
            - end: items are packed toward the end of the writing mode direction
            - left: items are packed toward the left edge of the container
            - right: items are packed toward the right edge of the container
            - center: items are centered along the line
            - space-between: items are evenly distributed in the line; first on start and last on end
            - space-around: items are evenly distributed with equal space around them. 
            - space-evenly: items are distributed so that the spacing between any two items and the space to the edges is equal.  
                safe: can't push an element such that it renders off screen in such a way the content can't be scrolled to 
                unsafe: 
        */
    
    align-items: flex-start | flex-end | center | stretch | baseline ;
        /*
        Defines default behavior for how items are laid out along the cross axis on the current line. Similar to justify-content:
            stretch: (default) stretch to fill the container, respective to min-width and max-width
            flex-start: items are placed at the start of the cross axis
            flex-end: items are placed at the end of the cross axis
            center: items are centered in the cross-axis
            baseline: items are aligned such as their baselines align
                safe: prevents aligning elements such that the content becomes inaccessible
                unsafe:
        */
    
    align-content: flex-start | flex-end | center| stretch | space-between | space-around ; 
        /*
        Aligns a flex container's lines within when there is extra space in the cross-axis, similar to how `justify-content` aligns individual items ithin the main-axis.
        This property has no effect when there is only one line of flex items. 
            stretch: (default) lines stretch to take up the remaining space
            flex-start: items packed to the start of the container
            flex-end: items packed to the end of the container
            center: items centered in the container
            space-between: items evenly distributed; first line at the start of the container with the last line at the end
            space-around: items evenly distributed with equal space around each line
            space-evenly: items are evenly distributed with equal space around them
        */



/* Property descriptions for the child (flex items) */
    order: <number> ; 
        /* 
        Controls the order in which they appear in the flex container.
        By default, items are given an order of zero (0) and are laid out in the source order.
        */

    flex-grow: <number> ;
        /*
        Defines the ability for a flex item to grow if necessary. Calculated (x/1).
        Dictates the amount of available space occupied by the item in the container. 
        Default is 1 = equal distribution. 2 = occupied space is double. 3 = occupied space is triple. etc
        */

    flex-shrink: <number> ; 
        /*
        Defines the abiity for a flex item to shrink if necessary. Calculated (1/x).
        Default is 1 = equal distribution. 2 = occupied space is halved. 3 = occupied space is thriced. etc
        */

    flex-basis: Xpx | Xem | Xrem | X% | auto ;
        /*
        Defines the default size of an element before remaining space is distributed. Can be a length or keyword.
            0: space around the content isn't factored in 
            auto: (default) evenly distributed between width and height, based on the child's <flex-grow> value
            content: sized based on the item's content
            max-content:
            min-content:
            fit-content:
        */

    flex: none | <flex-grow> <flex-shrink> <flex-basis>] ;
        /*
        Shorthand for <flex-grow>, <flex-shrink>, <flex-basis>. <flex-shrink> and <flex-basis> are optional. 
        Default values = 0 1 auto; 
        */

    align-self: auto | flex-start | flex-end | center | baseline | stretch ;
        /*
        Allows the default alignment (set by <align-items>) to be overridden for individual flex items.
            auto:
            stretch: stretch to fill the container, respective to min-width and max-width
            flex-start: items are placed at the start of the cross axis
            flex-end: items are placed at the end of the cross axis
            center: items are centered in the cross-axis
            baseline: items are aligned such as their baselines align
        */